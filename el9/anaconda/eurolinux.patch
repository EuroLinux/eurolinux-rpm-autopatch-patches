From e9edee357dae3aba99d4c815f01dc9abb53e1ac1 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Tomasz=20Podsiad=C5=82y?= <tp@euro-linux.com>
Date: Tue, 26 Apr 2022 17:03:31 +0200
Subject: [PATCH] whatever applied from the patch we had

---
 anaconda.py                                   |   2 +-
 data/anaconda-gtk.css                         |   3 +-
 depcomp                                       |   2 +-
 docs/common-bugs.rst                          |   3 +-
 docs/intro.rst                                |   2 +-
 docs/iscsi.rst                                |  12 +-
 docs/reporting.rst                            |   7 +-
 po/af.po                                      |  29 +--
 po/as.po                                      |  26 ++-
 po/ast.po                                     |  26 ++-
 po/be.po                                      |  29 +--
 po/bg.po                                      |  26 ++-
 po/bn.po                                      |  26 ++-
 po/ca.po                                      |  29 +--
 po/cs.po                                      |  42 ++--
 po/da.po                                      |  41 ++--
 po/de.po                                      |  44 ++--
 po/el.po                                      |  26 ++-
 po/en_GB.po                                   |  26 ++-
 po/eo.po                                      |  26 ++-
 po/es.po                                      |  42 ++--
 po/et.po                                      |  26 ++-
 po/eu.po                                      |  26 ++-
 po/fa.po                                      |  26 ++-
 po/fil.po                                     |  26 ++-
 po/fr.po                                      |  43 ++--
 po/fur.po                                     |  42 ++--
 po/ga.po                                      |  26 ++-
 po/gl.po                                      |  26 ++-
 po/gu.po                                      |  26 ++-
 po/he.po                                      |  39 ++--
 po/hi.po                                      |  26 ++-
 po/hr.po                                      |  42 ++--
 po/ia.po                                      |  26 ++-
 po/id.po                                      |  43 ++--
 po/it.po                                      |  43 ++--
 po/ja.po                                      |  41 ++--
 po/kk.po                                      |  42 ++--
 po/km.po                                      |  26 ++-
 po/kn.po                                      |  26 ++-
 po/ko.po                                      |  39 ++--
 po/lt.po                                      |  41 ++--
 po/lv.po                                      |  26 ++-
 po/ml.po                                      |  26 ++-
 po/mr.po                                      |  26 ++-
 po/my.po                                      |  26 ++-
 po/nb.po                                      |  26 ++-
 po/nl.po                                      |  44 ++--
 po/nn.po                                      |  26 ++-
 po/or.po                                      |  26 ++-
 po/pa.po                                      |  26 ++-
 po/pl.po                                      |  31 +--
 po/pt.po                                      |  42 ++--
 po/pt_BR.po                                   |  42 ++--
 po/ro.po                                      |  26 ++-
 po/ru.po                                      |  42 ++--
 po/si.po                                      |  26 ++-
 po/sk.po                                      |  42 ++--
 po/sq.po                                      |  26 ++-
 po/sr.po                                      |  29 +--
 po/sr@latin.po                                |  26 ++-
 po/sv.po                                      |  42 ++--
 po/ta.po                                      |  26 ++-
 po/te.po                                      |  26 ++-
 po/th.po                                      |  26 ++-
 po/tr.po                                      |  44 ++--
 po/uk.po                                      |  44 ++--
 po/ur.po                                      |  26 ++-
 po/zh_CN.po                                   |  37 ++-
 po/zh_HK.po                                   |  26 ++-
 po/zh_TW.po                                   |  28 +--
 pyanaconda/anaconda.py                        |   2 +-
 pyanaconda/argument_parsing.py                |   2 +-
 pyanaconda/core/constants.py                  |  10 +-
 pyanaconda/errors.py                          |   2 +-
 pyanaconda/installation.py                    |   5 +-
 .../modules/common/errors/installation.py     |   4 +-
 .../modules/common/structures/subscription.py |  58 ++---
 pyanaconda/modules/network/network.py         |   2 +-
 .../modules/network/network_interface.py      |   2 +-
 pyanaconda/modules/payloads/source/cdn/cdn.py |   2 +-
 pyanaconda/modules/storage/devicetree/root.py |   2 +-
 .../modules/subscription/initialization.py    |  52 ++---
 .../modules/subscription/installation.py      |  76 ++++---
 pyanaconda/modules/subscription/runtime.py    | 212 +++++++++---------
 pyanaconda/modules/subscription/satellite.py  |  52 ++---
 .../modules/subscription/subscription.py      |  20 +-
 .../subscription/subscription_interface.py    |  15 +-
 pyanaconda/payload/dnf/payload.py             |   9 +-
 .../ui/gui/spokes/installation_source.py      |   9 +-
 .../ui/gui/spokes/software_selection.py       |   2 +-
 pyanaconda/ui/gui/spokes/subscription.glade   |   6 +-
 pyanaconda/ui/gui/spokes/subscription.py      |  22 +-
 pyanaconda/ui/lib/subscription.py             |   5 +-
 scripts/analog                                |   2 +-
 tests/README.rst                              |  18 +-
 101 files changed, 1384 insertions(+), 1449 deletions(-)

diff --git a/anaconda.py b/anaconda.py
index f49ae03..81952dc 100755
--- a/anaconda.py
+++ b/anaconda.py
@@ -1,6 +1,6 @@
 #!/usr/bin/python3
 #
-# anaconda: The Red Hat Linux Installation program
+# anaconda: The EuroLinux Installation program
 #
 # Copyright (C) 1999-2013
 # Red Hat, Inc.  All rights reserved.
diff --git a/data/anaconda-gtk.css b/data/anaconda-gtk.css
index c47bb87..e835895 100644
--- a/data/anaconda-gtk.css
+++ b/data/anaconda-gtk.css
@@ -92,10 +92,11 @@ infobar.error {
 
 @define-color redhat #2d2d2d;
 @define-color fedora #2f4265;
+@define-color eurolinux #0c61ab;
 
 /* theme colors/images */
 
-@define-color product_bg_color @fedora;
+@define-color product_bg_color @eurolinux;
 
 /* logo and sidebar classes */
 
diff --git a/depcomp b/depcomp
index 65cbf70..bb99f86 100755
--- a/depcomp
+++ b/depcomp
@@ -478,7 +478,7 @@ hp2)
 tru64)
   # The Tru64 compiler uses -MD to generate dependencies as a side
   # effect.  'cc -MD -o foo.o ...' puts the dependencies into 'foo.o.d'.
-  # At least on Alpha/Redhat 6.1, Compaq CCC V6.2-504 seems to put
+  # At least on Alpha/EuroLinux 6.1, Compaq CCC V6.2-504 seems to put
   # dependencies in 'foo.d' instead, so we check for that too.
   # Subdirectories are respected.
   set_dir_from  "$object"
diff --git a/docs/common-bugs.rst b/docs/common-bugs.rst
index 533f726..dee47e6 100644
--- a/docs/common-bugs.rst
+++ b/docs/common-bugs.rst
@@ -62,7 +62,8 @@ Out of memory
 :Detection: Anaconda fails in stage1 with a message "Failed writing body" or "No space left on
     device" in the dracut logs. This usually happens when installing from http or ftp source on
     a machine with insufficient memory size. See the
-    `minimal requirements <https://access.redhat.com/articles/rhel-limits>`_ for RHEL.
+    `minimal requirements <https://access.redhat.com/articles/rhel-limits>`_ for EuroLinux
+    (the article mentions RHEL since it's binary-compatible).
 :Solution: Increase the memory size or try installing from NFS, CD-Rom or HDD source.
 :Example: `rhbz#1630763 <https://bugzilla.redhat.com/show_bug.cgi?id=1630763>`_
 
diff --git a/docs/intro.rst b/docs/intro.rst
index bbaf74f..2fa11a5 100644
--- a/docs/intro.rst
+++ b/docs/intro.rst
@@ -1,7 +1,7 @@
 Introduction to Anaconda
 ========================
 
-Anaconda is the installation program used by Fedora, Red Hat Enterprise Linux
+Anaconda is the installation program used by Fedora, EuroLinux
 and some other distributions.
 
 During installation, a target computer's hardware is identified and configured
diff --git a/docs/iscsi.rst b/docs/iscsi.rst
index 847078d..75e4234 100644
--- a/docs/iscsi.rst
+++ b/docs/iscsi.rst
@@ -16,7 +16,7 @@ The terminology:
 - 'initiator', the client in the iscsi connection. The computer we are running
   Anaconda on is typically an initiator.
 - 'target', the storage device behind the Network. This is where the data is
-  physically stored and read from. You can turn any Fedora/RHEL machine to a
+  physically stored and read from. You can turn any Fedora/EuroLinux machine to a
   target (or several) via scsi-target-utils.
 - 'HBA' or Host Bus Adapter. A device (PCI card typically) you connect to a
   computer. It acts as a NIC and if you configure it properly it transparently
@@ -25,7 +25,7 @@ The terminology:
 - 'software initiator' is what you end up with if you emulate most of what HBA is
   doing and just use a regular NIC for the iscsi communication. The modern Linux
   kernel has a software initiator. To use it, you need the Open-ISCSI software
-  stack [1, 2] installed. It is known as iscsi-initiator-utils in Fedora/RHEL.
+  stack [1, 2] installed. It is known as iscsi-initiator-utils in Fedora/EuroLinux.
 - 'partial offload card'. Similar to HBA but needs some support from kernel and
   iscsi-initiator-utils. The least pleasant to work with, particularly because
   there is no standardized amount of the manual setting that needs to be done
@@ -103,7 +103,7 @@ ultimately proved awkward especially due to the difficulties of handling the
 CHAP passphrases this way. That is why Hans de Goede <hdegoede@redhat.com>, the
 previous maintainer of the Anaconda iscsi subsystem decided to write a better
 interface and created libiscsi (do not confuse this with the libiscsi.c in
-kernel). Currently libiscsi lives as a couple of patches in the RHEL6
+kernel). Currently libiscsi lives as a couple of patches in the EuroLinux 6
 iscsi-initiator-utils CVS (and in Fedora package git, in somewhat outdated
 version). Since Anaconda is libiscsi's only client at the moment it is
 maintained by the Anaconda team.
@@ -139,7 +139,7 @@ If for some reason the DeviceTree fails at recognizing iscsi devices as such,
 The booting problems are either due to incorrectly generated dracut boot
 arguments or they are simply dracut bugs.
 
-Note that many of the iscsi adapters are installed in different Red Hat machines
+Note that many of the iscsi adapters are installed in different EuroLinux machines
 and so the issues can often be reproduced and debugged.
 
 
@@ -150,9 +150,9 @@ Future of iSCSI in Anaconda
   offload card. Implement the Anaconda UI to utilize this. Difficulty hard.
 - extend libiscsi with device binding support. Difficulty hard.
 - work with iscsi-initiator-utils maintainer to get libiscsi.c upstream and then
-  to rawhide Fedora. Then the partial offload patches in the RHEL6 Anaconda can
+  to rawhide Fedora. Then the partial offload patches in the EuroLinux 6 Anaconda can
   be migrated there too and partial offload can be tested. This is something
-  that needs to be done before RHEL7. Difficulty medium.
+  that needs to be done before EuroLinux 7. Difficulty medium.
 - improve libiscsi's logging capabilities. Difficulty easy.
 
 .. [1] http://www.open-iscsi.org/
diff --git a/docs/reporting.rst b/docs/reporting.rst
index 7109b56..7fcb476 100644
--- a/docs/reporting.rst
+++ b/docs/reporting.rst
@@ -2,12 +2,17 @@ Reporting bugs
 ==============
 
 Please, report a new bug or a feature request on Bugzilla_ against the anaconda
-component. You can use one of the quick links for Fedora_ or RHEL_.
+component. You can use one of the quick links for Fedora_ or RHEL_ (since
+EuroLinux is binary-compatible with RHEL).
 
 For the bug report, attach logs from the installation. You can find them during the
 installation at ``/tmp/*log`` or on the installed system at ``/var/log/anaconda/*log``.
 These files are usually essential for the investigation.
 
+Please, report the EuroLinux_-exclusive bugs such as improper branding as an
+issue at our distro-bugs-and-rfc GitHub repository.
+
 .. _Bugzilla: https://bugzilla.redhat.com/
 .. _Fedora: https://bugzilla.redhat.com/enter_bug.cgi?product=Fedora&component=anaconda
 .. _RHEL: https://bugzilla.redhat.com/enter_bug.cgi?product=Red%20Hat%20Enterprise%20Linux%208&component=anaconda
+.. _EuroLinux: https://github.com/EuroLinux/eurolinux-distro-bugs-and-rfc
diff --git a/pyanaconda/anaconda.py b/pyanaconda/anaconda.py
index ad0ae60..0caa896 100644
--- a/pyanaconda/anaconda.py
+++ b/pyanaconda/anaconda.py
@@ -1,4 +1,4 @@
-# anaconda: The Red Hat Linux Installation program
+# anaconda: The EuroLinux Installation program
 #
 # Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007
 # Red Hat, Inc.  All rights reserved.
diff --git a/pyanaconda/argument_parsing.py b/pyanaconda/argument_parsing.py
index cd0d910..bbadbae 100644
--- a/pyanaconda/argument_parsing.py
+++ b/pyanaconda/argument_parsing.py
@@ -17,7 +17,7 @@
 # along with this program.  If not, see <http://www.gnu.org/licenses/>.
 
 DESCRIPTION = "Anaconda is the installation program used by Fedora, " \
-              "Red Hat Enterprise Linux and some other distributions."
+              "EuroLinux and some other distributions."
 
 import itertools
 import os
diff --git a/pyanaconda/core/constants.py b/pyanaconda/core/constants.py
index af42648..760c476 100644
--- a/pyanaconda/core/constants.py
+++ b/pyanaconda/core/constants.py
@@ -156,8 +156,8 @@ WARNING_SUPPORT_REMOVED = N_(
 )
 
 WARNING_HARDWARE_UNSUPPORTED = N_(
-    "This hardware (or a combination thereof) is not supported by Red Hat. For more information "
-    "on supported hardware, please refer to http://www.redhat.com/hardware."
+    "This hardware (or a combination thereof) is not supported by EuroLinux. Since EuroLinux "
+    "is binary-compatible with RHEL, please refer to http://www.redhat.com/hardware."
 )
 
 # Storage messages
@@ -176,6 +176,7 @@ WARNING_SMT_ENABLED_GUI = N_(
     "improvements for certain workloads, but introduces several publicly "
     "disclosed security issues. You have the option of disabling SMT, which "
     "may impact performance. If you choose to leave SMT enabled, please read "
+    "(Since EuroLinux is binary-compatible with RHEL) "
     "https://red.ht/rhel-smt to understand your potential risks and learn "
     "about other ways to mitigate these risks."
 )
@@ -184,7 +185,8 @@ WARNING_SMT_ENABLED_GUI = N_(
 WARNING_SMT_ENABLED_TUI = N_(
     "Simultaneous Multithreading (SMT) may improve performance for certain "
     "workloads, but introduces several publicly disclosed security issues. "
-    "You can disable SMT, which may impact performance. Please read "
+    "You can disable SMT, which may impact performance. Since EuroLinux "
+    "is binary-compatible with RHEL, please read "
     "https://red.ht/rhel-smt to understand potential risks and learn about "
     "ways to mitigate these risks."
 )
@@ -448,7 +450,7 @@ SOURCE_REPO_FILE_TYPES = (
 
 # Payload sources overriden by the CDN
 
-# This set lists sources the Red Hat CDN should automatically
+# This set lists sources the EuroLinux CDN should automatically
 # override if the system gets registered during installation.
 # At the moment there is just the CDROM source, as almost
 # always the CDN content will be much more up to date and
diff --git a/pyanaconda/installation.py b/pyanaconda/installation.py
index b8c3ab9..7388199 100644
--- a/pyanaconda/installation.py
+++ b/pyanaconda/installation.py
@@ -83,8 +83,9 @@ def _prepare_configuration(payload, ksdata):
     # add installation tasks for the Subscription DBus module
     if is_module_available(SUBSCRIPTION):
         # we only run the tasks if the Subscription module is available
-        subscription_config = TaskQueue("Subscription configuration",
-                                        N_("Configuring Red Hat subscription"))
+        # This is not applicable to EuroLinux
+        subscription_config = TaskQueue("(This message should never appear. Please open an issue at https://github.com/EuroLinux/eurolinux-distro-bugs-and-rfc)",
+                                        N_("(This message should never appear. Please open an issue at https://github.com/EuroLinux/eurolinux-distro-bugs-and-rfc)"))
         subscription_proxy = SUBSCRIPTION.get_proxy()
         subscription_dbus_tasks = subscription_proxy.InstallWithTasks()
         subscription_config.append_dbus_tasks(SUBSCRIPTION, subscription_dbus_tasks)
diff --git a/pyanaconda/modules/network/network.py b/pyanaconda/modules/network/network.py
index cf0a4de..e179985 100644
--- a/pyanaconda/modules/network/network.py
+++ b/pyanaconda/modules/network/network.py
@@ -576,7 +576,7 @@ class NetworkService(KickstartService):
         config file.
 
         If default auto connections are turned off by NM configuration (based
-        on policy, eg on RHEL or server), the connection will be created by Anaconda
+        on policy, eg on EuroLinux or server), the connection will be created by Anaconda
         and dumped into config file.
 
         The connection id (and consequently config file name) is set to device
diff --git a/pyanaconda/modules/network/network_interface.py b/pyanaconda/modules/network/network_interface.py
index 6ca7eb0..9408050 100644
--- a/pyanaconda/modules/network/network_interface.py
+++ b/pyanaconda/modules/network/network_interface.py
@@ -225,7 +225,7 @@ class NetworkInterface(KickstartModuleInterface):
         config file.
 
         If default auto connections are turned off by NM configuration (based
-        on policy, eg on RHEL or server), the connection will be created by Anaconda
+        on policy, eg on EuroLinux or server), the connection will be created by Anaconda
         and dumped into config file.
 
         The connection id (and consequently config file name) is set to device
diff --git a/pyanaconda/modules/payloads/source/cdn/cdn.py b/pyanaconda/modules/payloads/source/cdn/cdn.py
index 05c0e11..c85a72b 100644
--- a/pyanaconda/modules/payloads/source/cdn/cdn.py
+++ b/pyanaconda/modules/payloads/source/cdn/cdn.py
@@ -44,4 +44,4 @@ class CDNSourceModule(RepoFilesSourceModule):
     @property
     def description(self):
         """Get description of this source."""
-        return _("Red Hat CDN")
+        return _("EuroLinux CDN")
diff --git a/pyanaconda/modules/storage/devicetree/root.py b/pyanaconda/modules/storage/devicetree/root.py
index 1af402e..eb0a548 100644
--- a/pyanaconda/modules/storage/devicetree/root.py
+++ b/pyanaconda/modules/storage/devicetree/root.py
@@ -201,7 +201,7 @@ def _release_from_redhat_release(fn):
 
     # get the release name and version
     # assumes that form is something
-    # like "Red Hat Linux release 6.2 (Zoot)"
+    # like "EuroLinux release 8.5 (Tirana)"
     (product, sep, version) = relstr.partition(" release ")
     if sep:
         rel_name = product
diff --git a/pyanaconda/ui/gui/spokes/installation_source.py b/pyanaconda/ui/gui/spokes/installation_source.py
index 9906268..2bd85d7 100644
--- a/pyanaconda/ui/gui/spokes/installation_source.py
+++ b/pyanaconda/ui/gui/spokes/installation_source.py
@@ -735,6 +735,9 @@ class SourceSpoke(NormalSpoke, GUISpokeInputCheckHandler, SourceSwitchHandler):
         self._network_button = self.builder.get_object("networkRadioButton")
         self._network_box = self.builder.get_object("networkBox")
 
+        # EuroLinux patch
+        really_hide(self._cdn_button)
+
         self._url_entry = self.builder.get_object("urlEntry")
         self._protocol_combo_box = self.builder.get_object("protocolComboBox")
         self._iso_chooser_button = self.builder.get_object("isoChooserButton")
@@ -1122,11 +1125,13 @@ class SourceSpoke(NormalSpoke, GUISpokeInputCheckHandler, SourceSwitchHandler):
         # This is an important distinction as Satellite instances are often used in environments
         # not connected to the public Internet, so seeing the installation source being provided
         # by Red Hat CDN which the machine might not be able to reach could be very confusing.
+        #
+        # These should never appear on EuroLinux.
         if self._subscription_module:
             if self.registered_to_satellite:
-                self._cdn_button.set_label(C_("GUI|Software Source", "_Satellite"))
+                self._cdn_button.set_label(C_("GUI|Software Source", "(This message should never appear. Please open an issue at https://github.com/EuroLinux/eurolinux-distro-bugs-and-rfc)"))
             else:
-                self._cdn_button.set_label(C_("GUI|Software Source", "Red Hat _CDN"))
+                self._cdn_button.set_label(C_("GUI|Software Source", "(This message should never appear. Please open an issue at https://github.com/EuroLinux/eurolinux-distro-bugs-and-rfc)"))
 
     def _setup_updates(self):
         """ Setup the state of the No Updates checkbox.
diff --git a/pyanaconda/ui/gui/spokes/software_selection.py b/pyanaconda/ui/gui/spokes/software_selection.py
index ed00e11..5f7a055 100644
--- a/pyanaconda/ui/gui/spokes/software_selection.py
+++ b/pyanaconda/ui/gui/spokes/software_selection.py
@@ -276,7 +276,7 @@ class SoftwareSelectionSpoke(NormalSpoke):
             subscribed = subscription_proxy.IsSubscriptionAttached
 
         if cdn_source and not subscribed:
-            return _("Red Hat CDN requires registration.")
+            return _("(This message should never appear. Please open an issue at https://github.com/EuroLinux/eurolinux-distro-bugs-and-rfc)")
 
         if not self.ready:
             return _("Installation source not set up")
diff --git a/pyanaconda/ui/gui/spokes/subscription.glade b/pyanaconda/ui/gui/spokes/subscription.glade
index f2ad01d..ab448f5 100644
--- a/pyanaconda/ui/gui/spokes/subscription.glade
+++ b/pyanaconda/ui/gui/spokes/subscription.glade
@@ -5,7 +5,7 @@
   <requires lib="AnacondaWidgets" version="1.0"/>
   <object class="AnacondaSpokeWindow" id="subscription_window">
     <property name="can-focus">False</property>
-    <property name="window-name" translatable="yes">CONNECT TO RED HAT</property>
+    <property name="window-name" translatable="yes">(This message should never appear. Please open an issue at https://github.com/EuroLinux/eurolinux-distro-bugs-and-rfc)</property>
     <signal name="button-clicked" handler="on_back_clicked" swapped="no"/>
     <child internal-child="main_box">
       <object class="GtkBox" id="AnacondaSpokeWindow-main_box1">
@@ -483,7 +483,7 @@
                                     </child>
                                     <child>
                                       <object class="GtkCheckButton" id="insights_checkbox">
-                                        <property name="label" translatable="yes" context="GUI|Subscription|Red Hat Insights">Connect to Red Hat _Insights</property>
+                                        <property name="label" translatable="yes" context="GUI|Subscription|Red Hat Insights">(This message should never appear. Please open an issue at https://github.com/EuroLinux/eurolinux-distro-bugs-and-rfc)</property>
                                         <property name="visible">True</property>
                                         <property name="can-focus">True</property>
                                         <property name="receives-default">False</property>
@@ -591,7 +591,7 @@
                                         </child>
                                         <child>
                                           <object class="GtkCheckButton" id="custom_server_hostname_checkbox">
-                                            <property name="label" translatable="yes">Satellite URL</property>
+                                            <property name="label" translatable="yes">(This message should never appear. Please open an issue at https://github.com/EuroLinux/eurolinux-distro-bugs-and-rfc)</property>
                                             <property name="visible">True</property>
                                             <property name="can-focus">True</property>
                                             <property name="receives-default">False</property>
diff --git a/pyanaconda/ui/gui/spokes/subscription.py b/pyanaconda/ui/gui/spokes/subscription.py
index cf63bad..2677a6d 100644
--- a/pyanaconda/ui/gui/spokes/subscription.py
+++ b/pyanaconda/ui/gui/spokes/subscription.py
@@ -63,7 +63,7 @@ class AuthenticationMethod(IntEnum):
 
 
 class SubscriptionSpoke(NormalSpoke):
-    """Subscription spoke provides the Connect to Red Hat screen."""
+    """Subscription spoke provides the Connect to (redacted) screen."""
     builderObjects = ["subscription_window"]
 
     mainWidgetName = "subscription_window"
@@ -72,7 +72,7 @@ class SubscriptionSpoke(NormalSpoke):
     category = SoftwareCategory
 
     icon = "application-certificate-symbolic"
-    title = CN_("GUI|Spoke", "_Connect to Red Hat")
+    title = CN_("GUI|Spoke", "_Connect to (redacted)")
 
     # main notebook pages
     REGISTRATION_PAGE = 0
@@ -85,8 +85,8 @@ class SubscriptionSpoke(NormalSpoke):
 
     @classmethod
     def should_run(cls, environment, data):
-        """The Subscription spoke should run only if the Subscription module is available."""
-        return is_module_available(SUBSCRIPTION)
+        """The Subscription spoke should not run since EuroLinux 9 is Open Core."""
+        return False
 
     def __init__(self, *args):
         super().__init__(*args)
@@ -107,7 +107,7 @@ class SubscriptionSpoke(NormalSpoke):
         self._registration_phase = None
         self._registration_controls_enabled = True
 
-        # Red Hat Insights should be enabled by default for non-kickstart installs.
+        # (redacted) Insights should be enabled by default for non-kickstart installs.
         #
         # For kickstart installations we will use the value from the module, which
         # False by default & can be set to True via the rhsm kickstart command.
@@ -152,7 +152,7 @@ class SubscriptionSpoke(NormalSpoke):
 
     @property
     def mandatory(self):
-        """The subscription spoke is mandatory if Red Hat CDN is set as installation source."""
+        """The subscription spoke is mandatory if (redacted) CDN is set as installation source."""
         return check_cdn_is_installation_source(self.payload)
 
     @property
@@ -223,7 +223,7 @@ class SubscriptionSpoke(NormalSpoke):
             self._http_proxy_password_entry.set_placeholder_text("")
 
     def enable_password_placeholder(self, show_placeholder):
-        """Show a placeholder on the red hat account password field.
+        """Show a placeholder on the (redacted) account password field.
 
         The placeholder notifies the user about activation
         key being set in the DBus module.
@@ -666,7 +666,7 @@ class SubscriptionSpoke(NormalSpoke):
 
         # Send ready signal to main event loop,
         # which among other things refreshes the hub to make
-        # sure the Connect to Red Hat spokes shows up as ready.
+        # sure the Connect to (redacted) spokes shows up as ready.
         hubQ.send_ready(self.__class__.__name__)
 
         # report that we are done
@@ -1117,9 +1117,9 @@ class SubscriptionSpoke(NormalSpoke):
         #   the installation environment itself is not expected to be
         #   connected to Insights
         if self._subscription_module.InsightsEnabled:
-            insights_string = _("Connected to Red Hat Insights")
+            insights_string = _("Connected to (redacted) Insights")
         else:
-            insights_string = _("Not connected to Red Hat Insights")
+            insights_string = _("Not connected to (redacted) Insights")
         self._insights_status_label.set_text(insights_string)
 
         # get attached subscriptions as a list of structs
@@ -1178,7 +1178,7 @@ class SubscriptionSpoke(NormalSpoke):
             # set a warning
             log.debug("Subscription GUI: setting connectivity warning")
             self.show_warning_message(
-                _("Please enable network access before connecting to Red Hat.")
+                _("Please enable network access before connecting to (redacted).")
             )
         # remember state
         self._network_connected_previously = network_connected
diff --git a/pyanaconda/ui/lib/subscription.py b/pyanaconda/ui/lib/subscription.py
index 7f1f6a6..5b500f8 100644
--- a/pyanaconda/ui/lib/subscription.py
+++ b/pyanaconda/ui/lib/subscription.py
@@ -16,6 +16,7 @@
 # You should have received a copy of the GNU General Public License
 # along with this program.  If not, see <http://www.gnu.org/licenses/>.
 #
+# This is not applicable to EuroLinux
 
 from enum import Enum
 
@@ -94,7 +95,7 @@ def _do_payload_restart(payload):
 
 
 def check_cdn_is_installation_source(payload):
-    """Check if Red Hat CDN is the current installation source.
+    """Check if CDN is the current installation source.
 
     :param payload: Anaconda payload instance
     """
@@ -108,7 +109,7 @@ def check_cdn_is_installation_source(payload):
 
 # Asynchronous registration + subscription & unregistration handling
 #
-# The Red Hat subscription related tasks communicate over network and might
+# The subscription related tasks communicate over network and might
 # take some time to finish (up to tens of seconds). We definitely don't want
 # to block either automated installation or the UI before they finish.
 #
diff --git a/scripts/analog b/scripts/analog
index be278eb..025066d 100755
--- a/scripts/analog
+++ b/scripts/analog
@@ -1,6 +1,6 @@
 #!/usr/bin/python3
 #
-# analog: Remote logging manager for the Red Hat Installer
+# analog: Remote logging manager for the EuroLinux Installer
 #
 # Copyright (C) 2010
 # Red Hat, Inc.  All rights reserved.
diff --git a/tests/README.rst b/tests/README.rst
index b4a9820..d0df28d 100644
--- a/tests/README.rst
+++ b/tests/README.rst
@@ -5,13 +5,15 @@ This document describes how to run Anaconda tests. Anaconda has various tests
 such as unit tests, rpm tests and translation tests.  All the tests will be run
 together if you follow the steps below.  For integration tests there is a
 separate repository kickstart-tests_ containing also tooling for running the tests.
+Since EuroLinux is binary-compatible with RHEL, there are several references to
+RHEL-related goodies.
 
 Run unit tests inside of container
 ----------------------------------
 This is the primary and recommended way to run the tests.
 
 Right now only unit tests are supported by the container, not rpm-tests.
-You can use our container image on `quay.io`_
+You can use a container image on `quay.io`_
 or you can build your own image.
 (Optional) to build the container image run::
 
@@ -123,7 +125,7 @@ Pull request for RHEL:
 ______________________
 
 Unit and rpm tests are run by the `validate-rhel-8.yml workflow`_ on (fully
-automatically deployed) self-hosted runners in our Upshift instance.
+automatically deployed) self-hosted runners in an Upshift instance.
 
 These runners are ``anaconda-ci:rhel8`` containers with all the dependencies in
 place so the yml configuration will just execute tests.  You can start runners
@@ -131,7 +133,7 @@ locally by running the container and providing GitHub token. That is pretty
 valuable in case of workflow testing.  See `github-action-run-once`_ for more
 details.
 
-To protect our self-hosted runners, tests only run automatically for
+To protect self-hosted runners, tests only run automatically for
 `rhinstaller organization members <https://github.com/orgs/rhinstaller/people>`_.
 For external contributors, an organization member needs to approve the test run
 by sending a comment starting with ``/tests``.
@@ -156,7 +158,7 @@ Container maintenance
 ---------------------
 
 All active branches run tests in containers. Containers have all the
-dependencies installed and the environment prepared to run tests or connect our
+dependencies installed and the environment prepared to run tests or connect
 GitHub runners (used by RHEL only).
 
 Automatic container build
@@ -177,7 +179,7 @@ container you can push your branch to the origin repo and run it from there.
 Security precautions for testing RHEL
 -------------------------------------
 
-Getting into our host/internal network
+Getting into host/internal network
 ______________________________________
 
 One of the main precautions is that each container test run has
@@ -214,19 +216,19 @@ are using ``pull_request_target`` instead of ``pull_request`` trigger. The main
 difference is that ``pull_request_target`` will run your PR tests on the target
 branch not on your PR branch. So workflow configuration has to be merged first
 to apply workflow changes. This has to be set on all workflow files in all
-branches, otherwise attackers could change existing workflow files to use our
+branches, otherwise attackers could change existing workflow files to use the
 runners even for branches where they are not normally used. Unfortunately,
 self-hosted runners can’t be bound to the branch, they are bound to the repo.
 
 How can I change the workflow
 _____________________________
 
-Due to our hardening it’s not possible to just create PR and see the result
+Due to hardening it’s not possible to just create PR and see the result
 of your change on the PR checks tab. You have to create PR on your fork branch
 which has the updated workflow. I would recommend you to create a test
 organization for this and avoid creating a new account.
 
-Similar situation works even for workflow to automatically update our containers.
+Similar situation works even for workflow to automatically update containers.
 This workflow has ``schedule`` and ``manual_dispatch`` triggers. ``schedule``
 triggers are always run on the default branch. For testing updates, always add
 ``manual_dispatch`` so that you can run them from your branch (on either origin
-- 
2.31.1

